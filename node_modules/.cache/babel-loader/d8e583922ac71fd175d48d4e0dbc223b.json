{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddonPanel = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nvar usePrevious = function usePrevious(value) {\n  var ref = (0, _react.useRef)();\n  (0, _react.useEffect)(function () {\n    // happens after return\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};\n\nvar useUpdate = function useUpdate(update, value) {\n  var previousValue = usePrevious(value);\n  return update ? value : previousValue;\n};\n\nvar AddonPanel = function AddonPanel(_ref) {\n  var active = _ref.active,\n      children = _ref.children;\n  return (// the transform is to prevent a bug where the content would be invisible\n    // the hidden attribute is an valid html element that's both accessible and works to visually hide content\n    _react[\"default\"].createElement(\"div\", {\n      hidden: !active,\n      style: {\n        transform: 'translateX(0px)'\n      }\n    }, useUpdate(active, children))\n  );\n};\n\nexports.AddonPanel = AddonPanel;\nAddonPanel.displayName = \"AddonPanel\";","map":null,"metadata":{},"sourceType":"script"}