{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Story = exports.StoryError = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _IFrame = require(\"./IFrame\");\n\nvar _EmptyBlock = require(\"./EmptyBlock\");\n\nvar _ZoomContext = require(\"./ZoomContext\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar BASE_URL = 'iframe.html';\nvar StoryError;\n/** error message for Story with null storyFn\n * if the story id exists, it must be pointing to a non-existing story\n *  if there is assigned story id, the story must be empty\n */\n\nexports.StoryError = StoryError;\n\n(function (StoryError) {\n  StoryError[\"NO_STORY\"] = \"No component or story to display\";\n})(StoryError || (exports.StoryError = StoryError = {}));\n\nvar MISSING_STORY = function MISSING_STORY(id) {\n  return id ? \"Story \\\"\".concat(id, \"\\\" doesn't exist.\") : StoryError.NO_STORY;\n};\n\nvar InlineZoomWrapper = function InlineZoomWrapper(_ref) {\n  var scale = _ref.scale,\n      children = _ref.children;\n  return scale === 1 ? _react[\"default\"].createElement(_react[\"default\"].Fragment, null, children) : _react[\"default\"].createElement(\"div\", {\n    style: {\n      overflow: 'hidden'\n    }\n  }, _react[\"default\"].createElement(\"div\", {\n    style: {\n      transform: \"scale(\".concat(1 / scale, \")\"),\n      transformOrigin: 'top left'\n    }\n  }, children));\n};\n\nvar InlineStory = function InlineStory(_ref2) {\n  var storyFn = _ref2.storyFn,\n      height = _ref2.height,\n      id = _ref2.id;\n  return _react[\"default\"].createElement(\"div\", {\n    style: {\n      height: height\n    }\n  }, _react[\"default\"].createElement(_ZoomContext.ZoomContext.Consumer, null, function (_ref3) {\n    var scale = _ref3.scale;\n    return _react[\"default\"].createElement(InlineZoomWrapper, {\n      scale: scale\n    }, storyFn ? _react[\"default\"].createElement(storyFn) : _react[\"default\"].createElement(_EmptyBlock.EmptyBlock, null, MISSING_STORY(id)));\n  }));\n};\n\nInlineStory.displayName = \"InlineStory\";\n\nvar IFrameStory = function IFrameStory(_ref4) {\n  var id = _ref4.id,\n      title = _ref4.title,\n      _ref4$height = _ref4.height,\n      height = _ref4$height === void 0 ? '500px' : _ref4$height;\n  return _react[\"default\"].createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: height\n    }\n  }, _react[\"default\"].createElement(_ZoomContext.ZoomContext.Consumer, null, function (_ref5) {\n    var scale = _ref5.scale;\n    return _react[\"default\"].createElement(_IFrame.IFrame, {\n      key: \"iframe\",\n      id: \"iframe--\".concat(id),\n      title: title,\n      src: \"\".concat(BASE_URL, \"?id=\").concat(id, \"&viewMode=story\"),\n      allowFullScreen: true,\n      scale: scale,\n      style: {\n        width: '100%',\n        height: '100%',\n        border: '0 none'\n      }\n    });\n  }));\n};\n\nIFrameStory.displayName = \"IFrameStory\";\n/**\n * A story element, either renderend inline or in an iframe,\n * with configurable height.\n */\n\nvar Story = function Story(props) {\n  var _ref6 = props,\n      error = _ref6.error;\n  var _ref7 = props,\n      storyFn = _ref7.storyFn;\n  var id = props.id,\n      inline = props.inline,\n      title = props.title,\n      height = props.height;\n\n  if (error) {\n    return _react[\"default\"].createElement(_EmptyBlock.EmptyBlock, null, error);\n  }\n\n  return inline ? _react[\"default\"].createElement(InlineStory, {\n    id: id,\n    storyFn: storyFn,\n    title: title,\n    height: height\n  }) : _react[\"default\"].createElement(IFrameStory, {\n    id: id,\n    title: title,\n    height: height\n  });\n};\n\nexports.Story = Story;","map":null,"metadata":{},"sourceType":"script"}