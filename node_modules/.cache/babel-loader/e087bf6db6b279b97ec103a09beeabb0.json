{"ast":null,"code":"import _slicedToArray from \"/Users/smo/neuefische/park-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/smo/neuefische/park-app/src/components/AnimalList.js\";\nimport React, { useState } from 'react';\nimport Animal from './Animal';\nimport { animals } from '../data/animals';\nconst animalsEven = animals.filter((animal, index) => index % 2 === 0);\nconsole.log(animalsEven);\nconst animalsOdd = animals.filter((animal, index) => index % 2 !== 0);\nconsole.log(animalsOdd);\nexport default function AnimalList() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        index = _useState2[0],\n        setIndex = _useState2[1];\n\n  function renderArrangement(index) {\n    if (index === 0) {\n      return React.createElement(RowStyled, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(ColumnStyled, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, animalsEven.map((animal, index) => React.createElement(Animal, {\n        key: index,\n        title: animal.title,\n        picture: animal.picture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }))), React.createElement(ColumnStyled, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, animalsOdd.map((animal, index) => React.createElement(Animal, {\n        key: index,\n        title: animal.title,\n        picture: animal.picture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }))));\n    } else if (index === 1) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, animals.map((animal, index) => React.createElement(Animal, {\n        key: index,\n        title: animal.title,\n        picture: animal.picture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    }\n  }\n\n  function handleGrid() {\n    setIndex(0);\n  }\n\n  function handleFullWidth() {\n    setIndex(1);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: handleGrid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Grid\"), React.createElement(\"button\", {\n    onClick: handleFullWidth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Details\"), renderArrangement(index));\n}\n\nconst RowStyled =\n/*#__PURE__*/\n_styled.div.withConfig({\n  displayName: \"AnimalList__RowStyled\",\n  componentId: \"z61icc-0\"\n})([\"display:grid;grid-template-columns:49% 49%;padding:0 4px;\"]);\n\nconst ColumnStyled =\n/*#__PURE__*/\n_styled.div.withConfig({\n  displayName: \"AnimalList__ColumnStyled\",\n  componentId: \"z61icc-1\"\n})([\"padding:0 4px;\"]);","map":{"version":3,"sources":["/Users/smo/neuefische/park-app/src/components/AnimalList.js"],"names":["React","useState","Animal","animals","animalsEven","filter","animal","index","console","log","animalsOdd","AnimalList","setIndex","renderArrangement","map","title","picture","handleGrid","handleFullWidth","RowStyled","styled","div","ColumnStyled"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,MAAMC,WAAW,GAAGD,OAAO,CAACE,MAAR,CAAe,CAACC,MAAD,EAASC,KAAT,KAAmBA,KAAK,GAAG,CAAR,KAAc,CAAhD,CAApB;AACAC,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACA,MAAMM,UAAU,GAAGP,OAAO,CAACE,MAAR,CAAe,CAACC,MAAD,EAASC,KAAT,KAAmBA,KAAK,GAAG,CAAR,KAAc,CAAhD,CAAnB;AACAC,OAAO,CAACC,GAAR,CAAYC,UAAZ;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA,oBACTV,QAAQ,CAAC,CAAD,CADC;AAAA;AAAA,QAC5BM,KAD4B;AAAA,QACrBK,QADqB;;AAEnC,WAASC,iBAAT,CAA2BN,KAA3B,EAAkC;AAChC,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,WAAW,CAACU,GAAZ,CAAgB,CAACR,MAAD,EAASC,KAAT,KACf,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EAAED,MAAM,CAACS,KAFhB;AAGE,QAAA,OAAO,EAAET,MAAM,CAACU,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF,EAUE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,UAAU,CAACI,GAAX,CAAe,CAACR,MAAD,EAASC,KAAT,KACd,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EAAED,MAAM,CAACS,KAFhB;AAGE,QAAA,OAAO,EAAET,MAAM,CAACU,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CAVF,CADF;AAsBD,KAvBD,MAuBO,IAAIT,KAAK,KAAK,CAAd,EAAiB;AACtB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,OAAO,CAACW,GAAR,CAAY,CAACR,MAAD,EAASC,KAAT,KACX,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,KAAb;AAAoB,QAAA,KAAK,EAAED,MAAM,CAACS,KAAlC;AAAyC,QAAA,OAAO,EAAET,MAAM,CAACU,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF;AAOD;AACF;;AAED,WAASC,UAAT,GAAsB;AACpBL,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;;AAED,WAASM,eAAT,GAA2B;AACzBN,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;;AACD,SACE,0CACE;AAAQ,IAAA,OAAO,EAAEK,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAQ,IAAA,OAAO,EAAEC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGGL,iBAAiB,CAACN,KAAD,CAHpB,CADF;AAOD;;AAED,MAAMY,SAAS;AAAA;AAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,iEAAf;;AAMA,MAAMC,YAAY;AAAA;AAAGF,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,sBAAlB","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components/macro'\nimport Animal from './Animal'\nimport { animals } from '../data/animals'\n\nconst animalsEven = animals.filter((animal, index) => index % 2 === 0)\nconsole.log(animalsEven)\nconst animalsOdd = animals.filter((animal, index) => index % 2 !== 0)\nconsole.log(animalsOdd)\n\nexport default function AnimalList() {\n  const [index, setIndex] = useState(0)\n  function renderArrangement(index) {\n    if (index === 0) {\n      return (\n        <RowStyled>\n          <ColumnStyled>\n            {animalsEven.map((animal, index) => (\n              <Animal\n                key={index}\n                title={animal.title}\n                picture={animal.picture}\n              />\n            ))}\n          </ColumnStyled>\n          <ColumnStyled>\n            {animalsOdd.map((animal, index) => (\n              <Animal\n                key={index}\n                title={animal.title}\n                picture={animal.picture}\n              />\n            ))}\n          </ColumnStyled>\n        </RowStyled>\n      )\n    } else if (index === 1) {\n      return (\n        <div>\n          {animals.map((animal, index) => (\n            <Animal key={index} title={animal.title} picture={animal.picture} />\n          ))}\n        </div>\n      )\n    }\n  }\n\n  function handleGrid() {\n    setIndex(0)\n  }\n\n  function handleFullWidth() {\n    setIndex(1)\n  }\n  return (\n    <>\n      <button onClick={handleGrid}>Grid</button>\n      <button onClick={handleFullWidth}>Details</button>\n      {renderArrangement(index)}\n    </>\n  )\n}\n\nconst RowStyled = styled.div`\n  display: grid;\n  grid-template-columns: 49% 49%;\n  padding: 0 4px;\n`\n\nconst ColumnStyled = styled.div`\n  padding: 0 4px;\n`\n"]},"metadata":{},"sourceType":"module"}