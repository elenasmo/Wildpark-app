{"ast":null,"code":"var _extends = Object.assign || function (a) {\n  for (var b, c = 1; c < arguments.length; c++) for (var d in b = arguments[c], b) Object.prototype.hasOwnProperty.call(b, d) && (a[d] = b[d]);\n\n  return a;\n},\n    _typeof = typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol' ? function (a) {\n  return typeof a;\n} : function (a) {\n  return a && typeof Symbol == 'function' && a.constructor === Symbol && a !== Symbol.prototype ? 'symbol' : typeof a;\n};\n\nfunction _objectWithoutProperties(a, b) {\n  var c = {};\n\n  for (var d in a) b.indexOf(d) >= 0 || Object.prototype.hasOwnProperty.call(a, d) && (c[d] = a[d]);\n\n  return c;\n}\n\nimport React from 'react';\nimport unquote from 'unquote';\nvar ATTRIBUTE_TO_JSX_PROP_MAP = {\n  accesskey: 'accessKey',\n  allowfullscreen: 'allowFullScreen',\n  allowtransparency: 'allowTransparency',\n  autocomplete: 'autoComplete',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  charset: 'charSet',\n  class: 'className',\n  classid: 'classId',\n  colspan: 'colSpan',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  crossorigin: 'crossOrigin',\n  enctype: 'encType',\n  for: 'htmlFor',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formmethod: 'formMethod',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  hreflang: 'hrefLang',\n  inputmode: 'inputMode',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  marginheight: 'marginHeight',\n  marginwidth: 'marginWidth',\n  maxlength: 'maxLength',\n  mediagroup: 'mediaGroup',\n  minlength: 'minLength',\n  novalidate: 'noValidate',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  rowspan: 'rowSpan',\n  spellcheck: 'spellCheck',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  tabindex: 'tabIndex',\n  usemap: 'useMap'\n},\n    namedCodesToUnicode = {\n  amp: '&',\n  apos: '\\'',\n  gt: '>',\n  lt: '<',\n  nbsp: '\\xA0',\n  quot: '\\u201C'\n},\n    DO_NOT_PROCESS_HTML_ELEMENTS = ['style', 'script'],\n    ATTR_EXTRACTOR_R = /([-A-Z0-9_:]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|(?:\\{((?:\\\\.|{[^}]*?}|[^}])*)\\})))?/gi,\n    AUTOLINK_MAILTO_CHECK_R = /mailto:/i,\n    BLOCK_END_R = /\\n{2,}$/,\n    BLOCKQUOTE_R = /^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+\\n{2,}/,\n    BLOCKQUOTE_TRIM_LEFT_MULTILINE_R = /^ *> ?/gm,\n    BREAK_LINE_R = /^ {2,}\\n/,\n    BREAK_THEMATIC_R = /^(?:( *[-*_]) *){3,}(?:\\n *)+\\n/,\n    CODE_BLOCK_FENCED_R = /^\\s*(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n *)+\\n?/,\n    CODE_BLOCK_R = /^(?: {4}[^\\n]+\\n*)+(?:\\n *)+\\n?/,\n    CODE_INLINE_R = /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n    CONSECUTIVE_NEWLINE_R = /^(?:\\n *)*\\n/,\n    CR_NEWLINE_R = /\\r\\n?/g,\n    FOOTNOTE_R = /^\\[\\^(.*)\\](:.*)\\n/,\n    FOOTNOTE_REFERENCE_R = /^\\[\\^(.*)\\]/,\n    FORMFEED_R = /\\f/g,\n    GFM_TASK_R = /^\\s*?\\[(x|\\s)\\]/,\n    HEADING_R = /^ *(#{1,6}) *([^\\n]+)\\n{0,2}/,\n    HEADING_SETEXT_R = /^([^\\n]+)\\n *(=|-){3,} *(?:\\n *)+\\n/,\n    HTML_BLOCK_ELEMENT_R = /^ *(?!<[a-z][^ >/]* ?\\/>)<([a-z][^ >/]*) ?([^>]*)\\/{0}>\\n?(\\s*(?:<\\1[^>]*?>[\\s\\S]*?<\\/\\1>|(?!<\\1)[\\s\\S])*?)<\\/\\1>\\n*/i,\n    HTML_CHAR_CODE_R = /&([a-z]+);/g,\n    HTML_COMMENT_R = /^<!--.*?-->/,\n    HTML_CUSTOM_ATTR_R = /^(data|aria|x)-[a-z_][a-z\\d_.-]*$/,\n    HTML_SELF_CLOSING_ELEMENT_R = /^ *<([a-z][a-z0-9:]*)(?:\\s+((?:<.*?>|[^>])*))?\\/?>(?!<\\/\\1>)(\\s*\\n)?/i,\n    INTERPOLATION_R = /^\\{.*\\}$/,\n    LINK_AUTOLINK_BARE_URL_R = /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n    LINK_AUTOLINK_MAILTO_R = /^<([^ >]+@[^ >]+)>/,\n    LINK_AUTOLINK_R = /^<([^ >]+:\\/[^ >]+)>/,\n    LIST_ITEM_END_R = / *\\n+$/,\n    LIST_LOOKBEHIND_R = /(?:^|\\n)( *)$/,\n    CAPTURE_LETTER_AFTER_HYPHEN = /-([a-z])?/gi,\n    NP_TABLE_R = /^(.*\\|?.*)\\n *(\\|? *[-:]+ *\\|[-| :]*)\\n((?:.*\\|.*\\n)*)\\n?/,\n    PARAGRAPH_R = /^((?:[^\\n]|\\n(?! *\\n))+)(?:\\n *)+\\n/,\n    REFERENCE_IMAGE_OR_LINK = /^\\[([^\\]]*)\\]:\\s*(\\S+)\\s*(\"([^\"]*)\")?/,\n    REFERENCE_IMAGE_R = /^!\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/,\n    REFERENCE_LINK_R = /^\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/,\n    SQUARE_BRACKETS_R = /(\\[|\\])/g,\n    SHOULD_RENDER_AS_BLOCK_R = /(\\n|^[-*]\\s|^#|^ {2,}|^-{2,}|^>\\s)/,\n    TAB_R = /\\t/g,\n    TABLE_SEPARATOR_R = /^ *\\| */,\n    TABLE_TRIM_PIPES = /(^ *\\||\\| *$)/g,\n    TABLE_CELL_END_TRIM = / *$/,\n    TABLE_CENTER_ALIGN = /^ *:-+: *$/,\n    TABLE_LEFT_ALIGN = /^ *:-+ *$/,\n    TABLE_RIGHT_ALIGN = /^ *-+: *$/,\n    TEXT_BOLD_R = /^([*_])\\1((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1\\1(?!\\1)/,\n    TEXT_EMPHASIZED_R = /^([*_])((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1(?!\\1)/,\n    TEXT_STRIKETHROUGHED_R = /^~~((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)~~/,\n    TEXT_ESCAPED_R = /^\\\\([^0-9A-Za-z\\s])/,\n    TEXT_PLAIN_R = /^[\\s\\S]+?(?=[^0-9A-Z\\s\\u00c0-\\uffff&;.()'\"]|\\d+\\.|\\n\\n| {2,}\\n|\\w+:\\S|$)/i,\n    TRIM_NEWLINES_AND_TRAILING_WHITESPACE_R = /(^\\n+|\\n+$|\\s+$)/g,\n    HTML_LEFT_TRIM_AMOUNT_R = /^([ \\t]*)/,\n    UNESCAPE_URL_R = /\\\\([^0-9A-Z\\s])/gi,\n    LIST_BULLET = '(?:[*+-]|\\\\d+\\\\.)',\n    LIST_ITEM_PREFIX = '( *)((?:[*+-]|\\\\d+\\\\.)) +',\n    LIST_ITEM_PREFIX_R = /^( *)((?:[*+-]|\\d+\\.)) +/,\n    LIST_ITEM_R = /( *)((?:[*+-]|\\d+\\.)) +[^\\n]*(?:\\n(?!\\1(?:[*+-]|\\d+\\.) )[^\\n]*)*(\\n|$)/gm,\n    LIST_R = /^( *)((?:[*+-]|\\d+\\.)) [\\s\\S]+?(?:\\n{2,}(?! )(?!\\1(?:[*+-]|\\d+\\.) (?!(?:[*+-]|\\d+\\.) ))\\n*|\\s*\\n*$)/,\n    LINK_INSIDE = '(?:\\\\[[^\\\\]]*\\\\]|[^\\\\[\\\\]]|\\\\](?=[^\\\\[]*\\\\]))*',\n    LINK_HREF_AND_TITLE = '\\\\s*<?((?:[^\\\\s\\\\\\\\]|\\\\\\\\.)*?)>?(?:\\\\s+[\\'\"]([\\\\s\\\\S]*?)[\\'\"])?\\\\s*',\n    LINK_R = /^\\[((?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*)\\]\\(\\s*<?((?:[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*\\)/,\n    IMAGE_R = /^!\\[((?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*)\\]\\(\\s*<?((?:[^\\s\\\\]|\\\\.)*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*\\)/,\n    BLOCK_SYNTAXES = [BLOCKQUOTE_R, CODE_BLOCK_R, CODE_BLOCK_FENCED_R, HEADING_R, HEADING_SETEXT_R, HTML_BLOCK_ELEMENT_R, HTML_COMMENT_R, HTML_SELF_CLOSING_ELEMENT_R, LIST_ITEM_R, LIST_R, NP_TABLE_R, PARAGRAPH_R];\n\nfunction containsBlockSyntax(a) {\n  return BLOCK_SYNTAXES.some(function (b) {\n    return b.test(a);\n  });\n}\n\nfunction slugify(a) {\n  return a.replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g, 'a').replace(/[çÇ]/g, 'c').replace(/[ðÐ]/g, 'd').replace(/[ÈÉÊËéèêë]/g, 'e').replace(/[ÏïÎîÍíÌì]/g, 'i').replace(/[Ññ]/g, 'n').replace(/[øØœŒÕõÔôÓóÒò]/g, 'o').replace(/[ÜüÛûÚúÙù]/g, 'u').replace(/[ŸÿÝý]/g, 'y').replace(/[^a-z0-9- ]/gi, '').replace(/ /gi, '-').toLowerCase();\n}\n\nfunction parseTableAlignCapture(a) {\n  if (TABLE_RIGHT_ALIGN.test(a)) return 'right';\n  return TABLE_CENTER_ALIGN.test(a) ? 'center' : TABLE_LEFT_ALIGN.test(a) ? 'left' : null;\n}\n\nfunction parseTableRow(a, b, c) {\n  var d = c.inTable;\n  c.inTable = !0;\n  var e = b(a.trim(), c);\n  c.inTable = d;\n  var f = [[]];\n  return e.forEach(function (a, b) {\n    a.type === 'tableSeparator' ? b !== 0 && b !== e.length - 1 && f.push([]) : (a.type === 'text' && (e[b + 1] == null || e[b + 1].type === 'tableSeparator') && (a.content = a.content.replace(TABLE_CELL_END_TRIM, '')), f[f.length - 1].push(a));\n  }), f;\n}\n\nfunction parseTableAlign(a) {\n  var b = a.replace(TABLE_TRIM_PIPES, '').split('|');\n  return b.map(parseTableAlignCapture);\n}\n\nfunction parseTableCells(a, b, c) {\n  var d = a.trim().split('\\n');\n  return d.map(function (a) {\n    return parseTableRow(a, b, c);\n  });\n}\n\nfunction parseTable(a, b, c) {\n  c.inline = !0;\n  var d = parseTableRow(a[1], b, c),\n      e = parseTableAlign(a[2], b, c),\n      f = parseTableCells(a[3], b, c);\n  return c.inline = !1, {\n    align: e,\n    cells: f,\n    header: d,\n    type: 'table'\n  };\n}\n\nfunction getTableStyle(a, b) {\n  return a.align[b] == null ? {} : {\n    textAlign: a.align[b]\n  };\n}\n\nfunction normalizeAttributeKey(a) {\n  var b = a.indexOf('-');\n  return b !== -1 && a.match(HTML_CUSTOM_ATTR_R) === null && (a = a.replace(CAPTURE_LETTER_AFTER_HYPHEN, function (a, b) {\n    return b.toUpperCase();\n  })), a;\n}\n\nfunction attributeValueToJSXPropValue(a, b) {\n  return a === 'style' ? b.split(/;\\s?/).reduce(function (a, b) {\n    var c = b.slice(0, b.indexOf(':')),\n        d = c.replace(/(-[a-z])/g, function (a) {\n      return a[1].toUpperCase();\n    });\n    return a[d] = b.slice(c.length + 1).trim(), a;\n  }, {}) : a === 'href' ? sanitizeUrl(b) : (b.match(INTERPOLATION_R) && (b = b.slice(1, b.length - 1)), b === 'true' || b !== 'false' && b);\n}\n\nfunction normalizeWhitespace(a) {\n  return a.replace(CR_NEWLINE_R, '\\n').replace(FORMFEED_R, '').replace(TAB_R, '    ');\n}\n\nfunction parserFor(a) {\n  function b(d, e) {\n    for (var f = [], g = ''; d;) for (var l = 0; l < c.length;) {\n      var h = c[l],\n          j = a[h],\n          k = j.match(d, e, g);\n\n      if (k) {\n        var i = k[0];\n        d = d.substring(i.length);\n        var m = j.parse(k, b, e);\n        m.type == null && (m.type = h), f.push(m), g = i;\n        break;\n      }\n\n      l++;\n    }\n\n    return f;\n  }\n\n  var c = Object.keys(a);\n  return process.env.NODE_ENV !== 'production' && c.forEach(function (b) {\n    var c = a[b].order;\n    process.env.NODE_ENV === 'production' || typeof c == 'number' && isFinite(c) || console.warn('markdown-to-jsx: Invalid order for rule `' + b + '`: ' + c);\n  }), c.sort(function (b, c) {\n    var d = a[b].order,\n        e = a[c].order;\n    return d === e ? b < c ? -1 : 1 : d - e;\n  }), function (a, c) {\n    return b(normalizeWhitespace(a), c);\n  };\n}\n\nfunction inlineRegex(a) {\n  return function (b, c) {\n    return c.inline ? a.exec(b) : null;\n  };\n}\n\nfunction simpleInlineRegex(a) {\n  return function (b, c) {\n    return c.inline || c.simple ? a.exec(b) : null;\n  };\n}\n\nfunction blockRegex(a) {\n  return function (b, c) {\n    return c.inline || c.simple ? null : a.exec(b);\n  };\n}\n\nfunction anyScopeRegex(a) {\n  return function (b) {\n    return a.exec(b);\n  };\n}\n\nfunction reactFor(a) {\n  return function b(c, d) {\n    if (d = d || {}, Array.isArray(c)) {\n      for (var e = d.key, f = [], g = !1, h = 0; h < c.length; h++) {\n        d.key = h;\n        var j = b(c[h], d),\n            k = typeof j == 'string';\n        k && g ? f[f.length - 1] += j : f.push(j), g = k;\n      }\n\n      return d.key = e, f;\n    }\n\n    return a(c, b, d);\n  };\n}\n\nfunction sanitizeUrl(a) {\n  try {\n    var b = decodeURIComponent(a);\n    if (b.match(/^\\s*javascript:/i)) return process.env.NODE_ENV !== 'production' && console.warn('Anchor URL contains an unsafe JavaScript expression, it will not be rendered.', b), null;\n  } catch (b) {\n    return process.env.NODE_ENV !== 'production' && console.warn('Anchor URL could not be decoded due to malformed syntax or characters, it will not be rendered.', a), null;\n  }\n\n  return a;\n}\n\nfunction unescapeUrl(a) {\n  return a.replace(UNESCAPE_URL_R, '$1');\n}\n\nfunction parseInline(a, b, c) {\n  var d = c.inline || !1,\n      e = c.simple || !1;\n  c.inline = !0, c.simple = !0;\n  var f = a(b, c);\n  return c.inline = d, c.simple = e, f;\n}\n\nfunction parseSimpleInline(a, b, c) {\n  var d = c.inline || !1,\n      e = c.simple || !1;\n  c.inline = !1, c.simple = !0;\n  var f = a(b, c);\n  return c.inline = d, c.simple = e, f;\n}\n\nfunction parseBlock(a, b, c) {\n  return c.inline = !1, a(b + '\\n\\n', c);\n}\n\nfunction parseCaptureInline(a, b, c) {\n  return {\n    content: parseInline(b, a[1], c)\n  };\n}\n\nfunction captureNothing() {\n  return {};\n}\n\nfunction renderNothing() {\n  return null;\n}\n\nfunction ruleOutput(a) {\n  return function (b, c, d) {\n    return a[b.type].react(b, c, d);\n  };\n}\n\nfunction cx() {\n  for (var a = arguments.length, b = Array(a), c = 0; c < a; c++) b[c] = arguments[c];\n\n  return b.filter(Boolean).join(' ');\n}\n\nfunction get(a, b, c) {\n  for (var d = a, e = b.split('.'); e.length && (d = d[e[0]], d !== void 0);) e.shift();\n\n  return d || c;\n}\n\nfunction getTag(a, b) {\n  var c = get(b, a);\n  return c ? typeof c == 'function' || (typeof c == 'undefined' ? 'undefined' : _typeof(c)) === 'object' && 'render' in c ? c : get(b, a + '.component', a) : a;\n}\n\nvar PARSE_PRIORITY_MAX = 1,\n    PARSE_PRIORITY_HIGH = 2,\n    PARSE_PRIORITY_MED = 3,\n    PARSE_PRIORITY_LOW = 4,\n    PARSE_PRIORITY_MIN = 5;\nexport function compiler(a, b) {\n  function d(a, c) {\n    for (var d = get(b.overrides, a + '.props', {}), e = arguments.length, g = Array(e > 2 ? e - 2 : 0), h = 2; h < e; h++) g[h - 2] = arguments[h];\n\n    return f.apply(void 0, [getTag(a, b.overrides), _extends({}, c, d, {\n      className: cx(c && c.className, d.className) || void 0\n    })].concat(g));\n  }\n\n  function c(a) {\n    var c = !1;\n    b.forceInline ? c = !0 : !b.forceBlock && (c = SHOULD_RENDER_AS_BLOCK_R.test(a) === !1);\n    var e = k(j(c ? a : a.replace(TRIM_NEWLINES_AND_TRAILING_WHITESPACE_R, '') + '\\n\\n', {\n      inline: c\n    })),\n        f = void 0;\n    return e.length > 1 ? f = c ? d('span', {\n      key: 'outer'\n    }, e) : d('div', {\n      key: 'outer'\n    }, e) : e.length === 1 ? (f = e[0], typeof f == 'string' && (f = d('span', {\n      key: 'outer'\n    }, f))) : f = d('span', {\n      key: 'outer'\n    }), f;\n  }\n\n  function e(a) {\n    var b = a.match(ATTR_EXTRACTOR_R);\n    return b ? b.reduce(function (a, b, d) {\n      var e = b.indexOf('=');\n\n      if (e !== -1) {\n        var f = normalizeAttributeKey(b.slice(0, e)).trim(),\n            g = unquote(b.slice(e + 1).trim()),\n            h = ATTRIBUTE_TO_JSX_PROP_MAP[f] || f,\n            i = a[h] = attributeValueToJSXPropValue(f, g);\n        (HTML_BLOCK_ELEMENT_R.test(i) || HTML_SELF_CLOSING_ELEMENT_R.test(i)) && (a[h] = React.cloneElement(c(i.trim()), {\n          key: d\n        }));\n      } else a[ATTRIBUTE_TO_JSX_PROP_MAP[b] || b] = !0;\n\n      return a;\n    }, {}) : void 0;\n  }\n\n  b = b || {}, b.overrides = b.overrides || {}, b.slugify = b.slugify || slugify, b.namedCodesToUnicode = b.namedCodesToUnicode ? _extends({}, namedCodesToUnicode, b.namedCodesToUnicode) : namedCodesToUnicode;\n  var f = b.createElement || React.createElement;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof a != 'string') throw new Error('markdown-to-jsx: the first argument must be\\n                             a string');\n    if (Object.prototype.toString.call(b.overrides) !== '[object Object]') throw new Error('markdown-to-jsx: options.overrides (second argument property) must be\\n                             undefined or an object literal with shape:\\n                             {\\n                                htmltagname: {\\n                                    component: string|ReactComponent(optional),\\n                                    props: object(optional)\\n                                }\\n                             }');\n  }\n\n  var g = [],\n      h = {},\n      i = {\n    blockQuote: {\n      match: blockRegex(BLOCKQUOTE_R),\n      order: PARSE_PRIORITY_HIGH,\n      parse: function d(a, b, c) {\n        return {\n          content: b(a[0].replace(BLOCKQUOTE_TRIM_LEFT_MULTILINE_R, ''), c)\n        };\n      },\n      react: function e(a, b, c) {\n        return d('blockquote', {\n          key: c.key\n        }, b(a.content, c));\n      }\n    },\n    breakLine: {\n      match: anyScopeRegex(BREAK_LINE_R),\n      order: PARSE_PRIORITY_HIGH,\n      parse: captureNothing,\n      react: function e(a, b, c) {\n        return d('br', {\n          key: c.key\n        });\n      }\n    },\n    breakThematic: {\n      match: blockRegex(BREAK_THEMATIC_R),\n      order: PARSE_PRIORITY_HIGH,\n      parse: captureNothing,\n      react: function e(a, b, c) {\n        return d('hr', {\n          key: c.key\n        });\n      }\n    },\n    codeBlock: {\n      match: blockRegex(CODE_BLOCK_R),\n      order: PARSE_PRIORITY_MAX,\n      parse: function c(a) {\n        var b = a[0].replace(/^ {4}/gm, '').replace(/\\n+$/, '');\n        return {\n          content: b,\n          lang: void 0\n        };\n      },\n      react: function e(a, b, c) {\n        return d('pre', {\n          key: c.key\n        }, d('code', {\n          className: a.lang ? 'lang-' + a.lang : ''\n        }, a.content));\n      }\n    },\n    codeFenced: {\n      match: blockRegex(CODE_BLOCK_FENCED_R),\n      order: PARSE_PRIORITY_MAX,\n      parse: function b(a) {\n        return {\n          content: a[3],\n          lang: a[2] || void 0,\n          type: 'codeBlock'\n        };\n      }\n    },\n    codeInline: {\n      match: simpleInlineRegex(CODE_INLINE_R),\n      order: PARSE_PRIORITY_LOW,\n      parse: function b(a) {\n        return {\n          content: a[2]\n        };\n      },\n      react: function e(a, b, c) {\n        return d('code', {\n          key: c.key\n        }, a.content);\n      }\n    },\n    footnote: {\n      match: blockRegex(FOOTNOTE_R),\n      order: PARSE_PRIORITY_MAX,\n      parse: function b(a) {\n        return g.push({\n          footnote: a[2],\n          identifier: a[1]\n        }), {};\n      },\n      react: renderNothing\n    },\n    footnoteReference: {\n      match: inlineRegex(FOOTNOTE_REFERENCE_R),\n      order: PARSE_PRIORITY_HIGH,\n      parse: function b(a) {\n        return {\n          content: a[1],\n          target: '#' + a[1]\n        };\n      },\n      react: function e(a, b, c) {\n        return d('a', {\n          key: c.key,\n          href: sanitizeUrl(a.target)\n        }, d('sup', {\n          key: c.key\n        }, a.content));\n      }\n    },\n    gfmTask: {\n      match: inlineRegex(GFM_TASK_R),\n      order: PARSE_PRIORITY_HIGH,\n      parse: function b(a) {\n        return {\n          completed: a[1].toLowerCase() === 'x'\n        };\n      },\n      react: function e(a, b, c) {\n        return d('input', {\n          checked: a.completed,\n          key: c.key,\n          readOnly: !0,\n          type: 'checkbox'\n        });\n      }\n    },\n    heading: {\n      match: blockRegex(HEADING_R),\n      order: PARSE_PRIORITY_HIGH,\n      parse: function e(a, c, d) {\n        return {\n          content: parseInline(c, a[2], d),\n          id: b.slugify(a[2]),\n          level: a[1].length\n        };\n      },\n      react: function f(a, b, c) {\n        var e = 'h' + a.level;\n        return d(e, {\n          id: a.id,\n          key: c.key\n        }, b(a.content, c));\n      }\n    },\n    headingSetext: {\n      match: blockRegex(HEADING_SETEXT_R),\n      order: PARSE_PRIORITY_MAX,\n      parse: function d(a, b, c) {\n        return {\n          content: parseInline(b, a[1], c),\n          level: a[2] === '=' ? 1 : 2,\n          type: 'heading'\n        };\n      }\n    },\n    htmlBlock: {\n      match: anyScopeRegex(HTML_BLOCK_ELEMENT_R),\n      order: PARSE_PRIORITY_HIGH,\n      parse: function l(a, b, c) {\n        var d = a[3].match(HTML_LEFT_TRIM_AMOUNT_R),\n            f = d[1],\n            g = new RegExp('^' + f, 'gm'),\n            h = a[3].replace(g, ''),\n            i = containsBlockSyntax(h) ? parseBlock : parseInline,\n            j = a[1].toLowerCase(),\n            k = DO_NOT_PROCESS_HTML_ELEMENTS.indexOf(j) !== -1;\n        return {\n          attrs: e(a[2]),\n          content: k ? a[3] : i(b, h, c),\n          noInnerParse: k,\n          tag: k ? j : a[1]\n        };\n      },\n      react: function e(a, b, c) {\n        return d(a.tag, _extends({\n          key: c.key\n        }, a.attrs), a.noInnerParse ? a.content : b(a.content, c));\n      }\n    },\n    htmlComment: {\n      match: anyScopeRegex(HTML_COMMENT_R),\n      order: PARSE_PRIORITY_HIGH,\n      parse: function a() {\n        return {};\n      },\n      react: renderNothing\n    },\n    htmlSelfClosing: {\n      match: anyScopeRegex(HTML_SELF_CLOSING_ELEMENT_R),\n      order: PARSE_PRIORITY_HIGH,\n      parse: function b(a) {\n        return {\n          attrs: e(a[2] || ''),\n          tag: a[1]\n        };\n      },\n      react: function e(a, b, c) {\n        return d(a.tag, _extends({}, a.attrs, {\n          key: c.key\n        }));\n      }\n    },\n    image: {\n      match: simpleInlineRegex(IMAGE_R),\n      order: PARSE_PRIORITY_HIGH,\n      parse: function b(a) {\n        return {\n          alt: a[1],\n          target: unescapeUrl(a[2]),\n          title: a[3]\n        };\n      },\n      react: function e(a, b, c) {\n        return d('img', {\n          key: c.key,\n          alt: a.alt || void 0,\n          title: a.title || void 0,\n          src: sanitizeUrl(a.target)\n        });\n      }\n    },\n    link: {\n      match: inlineRegex(LINK_R, !1),\n      order: PARSE_PRIORITY_LOW,\n      parse: function d(a, b, c) {\n        return {\n          content: parseSimpleInline(b, a[1], c),\n          target: unescapeUrl(a[2]),\n          title: a[3]\n        };\n      },\n      react: function e(a, b, c) {\n        return d('a', {\n          key: c.key,\n          href: sanitizeUrl(a.target),\n          title: a.title\n        }, b(a.content, c));\n      }\n    },\n    linkAngleBraceStyleDetector: {\n      match: inlineRegex(LINK_AUTOLINK_R),\n      order: PARSE_PRIORITY_MAX,\n      parse: function b(a) {\n        return {\n          content: [{\n            content: a[1],\n            type: 'text'\n          }],\n          target: a[1],\n          type: 'link'\n        };\n      }\n    },\n    linkBareUrlDetector: {\n      match: inlineRegex(LINK_AUTOLINK_BARE_URL_R),\n      order: PARSE_PRIORITY_MAX,\n      parse: function b(a) {\n        return {\n          content: [{\n            content: a[1],\n            type: 'text'\n          }],\n          target: a[1],\n          title: void 0,\n          type: 'link'\n        };\n      }\n    },\n    linkMailtoDetector: {\n      match: inlineRegex(LINK_AUTOLINK_MAILTO_R),\n      order: PARSE_PRIORITY_MAX,\n      parse: function d(a) {\n        var b = a[1],\n            c = a[1];\n        return AUTOLINK_MAILTO_CHECK_R.test(c) || (c = 'mailto:' + c), {\n          content: [{\n            content: b.replace('mailto:', ''),\n            type: 'text'\n          }],\n          target: c,\n          type: 'link'\n        };\n      }\n    },\n    list: {\n      match: function f(a, b, c) {\n        var d = LIST_LOOKBEHIND_R.exec(c),\n            e = b._list || !b.inline;\n        return d && e ? (a = d[1] + a, LIST_R.exec(a)) : null;\n      },\n      order: PARSE_PRIORITY_HIGH,\n      parse: function j(a, b, c) {\n        var d = a[2],\n            e = d.length > 1,\n            f = e ? +d : void 0,\n            g = a[0].replace(BLOCK_END_R, '\\n').match(LIST_ITEM_R),\n            h = !1,\n            i = g.map(function (a, d) {\n          var e = LIST_ITEM_PREFIX_R.exec(a)[0].length,\n              f = new RegExp('^ {1,' + e + '}', 'gm'),\n              i = a.replace(f, '').replace(LIST_ITEM_PREFIX_R, ''),\n              j = d === g.length - 1,\n              k = i.indexOf('\\n\\n') !== -1,\n              l = k || j && h;\n          h = l;\n          var m = c.inline,\n              n = c._list;\n          c._list = !0;\n          var o;\n          l ? (c.inline = !1, o = i.replace(LIST_ITEM_END_R, '\\n\\n')) : (c.inline = !0, o = i.replace(LIST_ITEM_END_R, ''));\n          var p = b(o, c);\n          return c.inline = m, c._list = n, p;\n        });\n        return {\n          items: i,\n          ordered: e,\n          start: f\n        };\n      },\n      react: function f(a, b, c) {\n        var e = a.ordered ? 'ol' : 'ul';\n        return d(e, {\n          key: c.key,\n          start: a.start\n        }, a.items.map(function (a, e) {\n          return d('li', {\n            key: e\n          }, b(a, c));\n        }));\n      }\n    },\n    newlineCoalescer: {\n      match: blockRegex(CONSECUTIVE_NEWLINE_R),\n      order: PARSE_PRIORITY_LOW,\n      parse: captureNothing,\n      react: function a() {\n        return '\\n';\n      }\n    },\n    paragraph: {\n      match: blockRegex(PARAGRAPH_R),\n      order: PARSE_PRIORITY_LOW,\n      parse: parseCaptureInline,\n      react: function e(a, b, c) {\n        return d('p', {\n          key: c.key\n        }, b(a.content, c));\n      }\n    },\n    ref: {\n      match: inlineRegex(REFERENCE_IMAGE_OR_LINK),\n      order: PARSE_PRIORITY_MAX,\n      parse: function b(a) {\n        return h[a[1]] = {\n          target: a[2],\n          title: a[4]\n        }, {};\n      },\n      react: renderNothing\n    },\n    refImage: {\n      match: simpleInlineRegex(REFERENCE_IMAGE_R),\n      order: PARSE_PRIORITY_MAX,\n      parse: function b(a) {\n        return {\n          alt: a[1] || void 0,\n          ref: a[2]\n        };\n      },\n      react: function e(a, b, c) {\n        return d('img', {\n          key: c.key,\n          alt: a.alt,\n          src: sanitizeUrl(h[a.ref].target),\n          title: h[a.ref].title\n        });\n      }\n    },\n    refLink: {\n      match: inlineRegex(REFERENCE_LINK_R),\n      order: PARSE_PRIORITY_MAX,\n      parse: function d(a, b, c) {\n        return {\n          content: b(a[1], c),\n          fallbackContent: b(a[0].replace(SQUARE_BRACKETS_R, '\\\\$1'), c),\n          ref: a[2]\n        };\n      },\n      react: function e(a, b, c) {\n        return h[a.ref] ? d('a', {\n          key: c.key,\n          href: sanitizeUrl(h[a.ref].target),\n          title: h[a.ref].title\n        }, b(a.content, c)) : d('span', {\n          key: c.key\n        }, b(a.fallbackContent, c));\n      }\n    },\n    table: {\n      match: blockRegex(NP_TABLE_R),\n      order: PARSE_PRIORITY_HIGH,\n      parse: parseTable,\n      react: function f(a, b, e) {\n        return d('table', {\n          key: e.key\n        }, d('thead', null, d('tr', null, a.header.map(function (c, f) {\n          return d('th', {\n            key: f,\n            style: getTableStyle(a, f)\n          }, b(c, e));\n        }))), d('tbody', null, a.cells.map(function (c, f) {\n          return d('tr', {\n            key: f\n          }, c.map(function (f, g) {\n            return d('td', {\n              key: g,\n              style: getTableStyle(a, g)\n            }, b(f, e));\n          }));\n        })));\n      }\n    },\n    tableSeparator: {\n      match: function c(a, b) {\n        return b.inTable ? TABLE_SEPARATOR_R.exec(a) : null;\n      },\n      order: PARSE_PRIORITY_HIGH,\n      parse: function a() {\n        return {\n          type: 'tableSeparator'\n        };\n      },\n      react: function a() {\n        return ' | ';\n      }\n    },\n    text: {\n      match: anyScopeRegex(TEXT_PLAIN_R),\n      order: PARSE_PRIORITY_MIN,\n      parse: function c(a) {\n        return {\n          content: a[0].replace(HTML_CHAR_CODE_R, function (a, c) {\n            return b.namedCodesToUnicode[c] ? b.namedCodesToUnicode[c] : a;\n          })\n        };\n      },\n      react: function b(a) {\n        return a.content;\n      }\n    },\n    textBolded: {\n      match: simpleInlineRegex(TEXT_BOLD_R),\n      order: PARSE_PRIORITY_MED,\n      parse: function d(a, b, c) {\n        return {\n          content: b(a[2], c)\n        };\n      },\n      react: function e(a, b, c) {\n        return d('strong', {\n          key: c.key\n        }, b(a.content, c));\n      }\n    },\n    textEmphasized: {\n      match: simpleInlineRegex(TEXT_EMPHASIZED_R),\n      order: PARSE_PRIORITY_LOW,\n      parse: function d(a, b, c) {\n        return {\n          content: b(a[2], c)\n        };\n      },\n      react: function e(a, b, c) {\n        return d('em', {\n          key: c.key\n        }, b(a.content, c));\n      }\n    },\n    textEscaped: {\n      match: simpleInlineRegex(TEXT_ESCAPED_R),\n      order: PARSE_PRIORITY_HIGH,\n      parse: function b(a) {\n        return {\n          content: a[1],\n          type: 'text'\n        };\n      }\n    },\n    textStrikethroughed: {\n      match: simpleInlineRegex(TEXT_STRIKETHROUGHED_R),\n      order: PARSE_PRIORITY_LOW,\n      parse: parseCaptureInline,\n      react: function e(a, b, c) {\n        return d('del', {\n          key: c.key\n        }, b(a.content, c));\n      }\n    }\n  },\n      j = parserFor(i),\n      k = reactFor(ruleOutput(i)),\n      l = c(a);\n  return g.length && l.props.children.push(d('footer', {\n    key: 'footer'\n  }, g.map(function (a) {\n    return d('div', {\n      id: a.identifier,\n      key: a.identifier\n    }, a.identifier, k(j(a.footnote, {\n      inline: !0\n    })));\n  }))), l;\n}\nexport default function Markdown(a) {\n  var b = a.children,\n      c = a.options,\n      d = _objectWithoutProperties(a, ['children', 'options']);\n\n  return React.cloneElement(compiler(b, c), d);\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var PropTypes = require('prop-types');\n\n  Markdown.propTypes = {\n    children: PropTypes.string.isRequired,\n    options: PropTypes.object\n  };\n}","map":null,"metadata":{},"sourceType":"module"}