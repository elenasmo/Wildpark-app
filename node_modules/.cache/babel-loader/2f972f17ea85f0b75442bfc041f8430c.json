{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.string.replace\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatter = void 0;\n\nvar _memoizerific = _interopRequireDefault(require(\"memoizerific\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar formatter = (0, _memoizerific[\"default\"])(2)(function (code) {\n  // code provided to the component is often coming from template literals, which preserve whitespace.\n  // sometimes the first line doesn't have padding, but the second does.\n  // we split the code-string into lines, then if we find padding on line 0 or 1,\n  // we assume that padding is bad, and remove that much padding on all following lines\n  return code.split(/\\n/).reduce(function (acc, i, index) {\n    var match = i.match(/^((:?\\s|\\t)+)/);\n    var padding = match ? match[1] : '';\n\n    if (acc.firstIndent === '' && padding && index < 3) {\n      return {\n        result: \"\".concat(acc.result, \"\\n\").concat(i.replace(padding, '')),\n        firstIndent: padding\n      };\n    }\n\n    return {\n      result: \"\".concat(acc.result, \"\\n\").concat(i.replace(acc.firstIndent, '').replace(/\\s*$/, '')),\n      firstIndent: acc.firstIndent\n    };\n  }, {\n    firstIndent: '',\n    result: ''\n  }).result.trim();\n});\nexports.formatter = formatter;","map":null,"metadata":{},"sourceType":"script"}