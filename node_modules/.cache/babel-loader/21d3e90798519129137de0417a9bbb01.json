{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Typeset = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _theming = require(\"@storybook/theming\");\n\nvar _polished = require(\"polished\");\n\nvar _withReset = require(\"../typography/withReset\");\n\nvar _BlockBackgroundStyles = require(\"./BlockBackgroundStyles\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar Label = _theming.styled.div(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    marginRight: 30,\n    fontSize: \"\".concat(theme.typography.size.s1, \"px\"),\n    color: theme.base === 'light' ? (0, _polished.transparentize)(0.4, theme.color.defaultText) : (0, _polished.transparentize)(0.6, theme.color.defaultText)\n  };\n});\n\nvar Sample = _theming.styled.div({\n  lineHeight: 1,\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis'\n});\n\nvar TypeSpecimen = _theming.styled.div({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'baseline',\n  '&:not(:last-child)': {\n    marginBottom: '1rem'\n  }\n});\n\nvar Wrapper = _theming.styled.div(_withReset.withReset, function (_ref2) {\n  var theme = _ref2.theme;\n  return Object.assign({}, (0, _BlockBackgroundStyles.getBlockBackgroundStyle)(theme), {\n    margin: '25px 0 40px',\n    padding: '30px 20px'\n  });\n});\n/**\n * Convenient tyleguide documentation showing examples of type\n * with different sizes and weights and configurable sample text.\n */\n\n\nvar Typeset = function Typeset(_ref3) {\n  var fontSizes = _ref3.fontSizes,\n      fontWeight = _ref3.fontWeight,\n      sampleText = _ref3.sampleText,\n      props = _objectWithoutProperties(_ref3, [\"fontSizes\", \"fontWeight\", \"sampleText\"]);\n\n  return _react[\"default\"].createElement(Wrapper, _extends({}, props, {\n    className: \"docblock-typeset\"\n  }), fontSizes.map(function (num) {\n    return _react[\"default\"].createElement(TypeSpecimen, {\n      key: num\n    }, _react[\"default\"].createElement(Label, null, num, \"px\"), _react[\"default\"].createElement(Sample, {\n      style: {\n        fontSize: num,\n        fontWeight: fontWeight\n      }\n    }, sampleText || 'Was he a beast if music could move him so?'));\n  }));\n};\n\nexports.Typeset = Typeset;\nTypeset.displayName = \"Typeset\";","map":null,"metadata":{},"sourceType":"script"}